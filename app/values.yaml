replicaCount: 1

authService:
  name: auth
  image:
    repository: fenkss/auth-app
    tag: "latest"
    pullPolicy: Always
  type: ClusterIP
  port: 80
  develop:
    enabled: false
    pwd: "/hosthome/fenk/projects/k8s/k8s-php-saga/auth/app"
  database: auth
  env:
    - name: DATABASE_URL
      key: AUTH_DATABASE_URL

billingService:
  name: billing
  image:
    repository: fenkss/billing-app
    tag: "latest"
    pullPolicy: Always
  type: NodePort
  port: 80
  develop:
    enabled: false
    pwd: "/hosthome/fenk/projects/k8s/k8s-php-saga/billing/app"
  database: billing
  env:
    - name: DATABASE_URL
      key: BILLING_DATABASE_URL
    - name: KAFKA_URL
      key: KAFKA_URL

deliveryService:
  name: delivery
  image:
    repository: fenkss/delivery-app
    tag: "latest"
    pullPolicy: Always
  type: NodePort
  port: 80
  develop:
    enabled: false
    pwd: "/hosthome/fenk/projects/k8s/k8s-php-saga/delivery/app"
  database: delivery
  env:
    - name: DATABASE_URL
      key: DELIVERY_DATABASE_URL
    - name: KAFKA_URL
      key: KAFKA_URL

orderService:
  name: order
  image:
    repository: fenkss/order-app
    tag: "latest"
    pullPolicy: Always
  type: NodePort
  port: 80
  develop:
    enabled: false
    pwd: "/hosthome/fenk/projects/k8s/k8s-php-saga/order/app"
  database: order
  env:
    - name: DATABASE_URL
      key: ORDER_DATABASE_URL
    - name: KAFKA_URL
      key: KAFKA_URL

storeService:
  name: store
  image:
    repository: fenkss/store-app
    tag: "latest"
    pullPolicy: Always
  type: ClusterIP
  port: 80
  develop:
    enabled: false
    pwd: "/hosthome/fenk/projects/k8s/k8s-php-saga/store/app"
  database: store
  env:
    - name: DATABASE_URL
      key: STORE_DATABASE_URL
    - name: KAFKA_URL
      key: KAFKA_URL

persistence:
  accessMode: ReadWriteOnce
  enabled: true
  size: 5Gi
  storageClass: standard

serviceAccount:
  create: true
  annotations: { }
  name: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

mysql:
  fullnameOverride: "app-mysql"
  auth:
    password: "1"
    rootPassword: "1"
    username: "app"

traefik:
  providers:
    kubernetesIngress:
      enabled: false # Настраиваем маршруты только с помощью CRD (IngressRoute)
  ports:
    websecure:
      expose: false # Выключаем https
  logs:
    access:
      enabled: true
    general:
      level: DEBUG

kafka:
  fullnameOverride: "app-kafka"
  zookeeper:
  #    nameOverride: "app-zookeeper"
  autoCreateTopicsEnable: true
  provisioning:
    topics: [ 'order', 'store', 'billing', 'delivery' ]
  auth:
    sasl:
      jaas:
        clientPasswords: [
          123
        ]

kafkaTopicCreator:
  jobName: app-kafka-topic-creator
  helmHook: post-install
  kafka:
    topics:
      - name: order
        replicationFactor: 1
        partitions: 1
      - name: store
        replicationFactor: 1
        partitions: 1
      - name: billing
        replicationFactor: 1
        partitions: 1
      - name: delivery
        replicationFactor: 1
        partitions: 1
  zookeeper:
    address: app-zookeeper:2181
  imagePullSecrets:
    - name: regcred