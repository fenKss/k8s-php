replicaCount: 1

billingService:
  image:
    repository: billing-app
    tag: "latest"
    pullPolicy: Never
  type: NodePort
  port: 80
  develop:
    enabled: true
    pwd: "/hosthome/fenk/projects/k8s/k8s-php/billing/app"

notificationService:
  image:
    repository: notification-app
    tag: "latest"
    pullPolicy: Never
  type: ClusterIP
  port: 80
  develop:
    enabled: true
    pwd: "/hosthome/fenk/projects/k8s/k8s-php/notification/app"

authService:
  image:
    repository: auth-app
    tag: "latest"
    pullPolicy: Never
  type: ClusterIP
  port: 80
  develop:
    enabled: true
    pwd: "/hosthome/fenk/projects/k8s/k8s-php/auth/app"

persistence:
  accessMode: ReadWriteOnce
  enabled: true
  size: 5Gi
  storageClass: standard

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

mysql:
  fullnameOverride: "app-mysql"
  auth:
    password: "1"
    rootPassword: "1"
    username: "app"
    database: "app"

traefik:
  providers:
    kubernetesIngress:
      enabled: false # Настраиваем маршруты только с помощью CRD (IngressRoute)
  ports:
    websecure:
      expose: false # Выключаем https
  logs:
    access:
      enabled: true
    general:
      level: DEBUG

kafka:
  fullnameOverride: "app-kafka"
  auth:
    sasl:
      jaas:
        clientPasswords: [
          123
        ]